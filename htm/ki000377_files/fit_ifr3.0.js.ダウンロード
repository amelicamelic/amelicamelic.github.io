document.addEventListener('DOMContentLoaded', function () {
    /**
     * ユーザーエージェントを識別します
     * @returns 判別結果の配列
     */
    var detectUa = function () {
        var uas = navigator.userAgent.toLowerCase();
        if (uas.match(/msie/)) {
            // Internet Explorer 10以前、もしくはその互換モード
            var msm = uas.match(/msie (\d+\.\d+)/);
            if (uas.indexOf('trident') < 0) {
                // IE7以前
                return ['IE', msm[1]];
            }
            var trm = uas.match(/trident\/(\d+)/);
            if (trm[1] == '7') {
                return ['IE', '11', msm[1]];
            } else if (trm[1] == '6') {
                return ['IE', '10', msm[1]];
            } else if (trm[1] == '5') {
                return ['IE', '9', msm[1]];
            } else {
                return ['IE', '8', msm[1]];
            }
        } else if (uas.match(/trident/)) {
            // Internet Explorer 11と推定
            var trm = uas.match(/trident\/(\d+)/);
            if (trm[1] == '7') {
                return ['IE', '11', '11'];
            } else if (trm[1] == '6') {
                return ['IE', '10', '10'];
            } else if (trm[1] == '5') {
                return ['IE', '9', '9'];
            } else {
                return ['IE', '8', '8'];
            }
        } else if (uas.match(/edge/)) {
            // EdgeHTML版Microsofrt Edge
            var edm = uas.match(/edge\/(\d+\.\d+)/);
            return ['Edge', 'EdgeHTML', edm[1]];
        } else if (uas.match(/edg/)) {
            // Chromium版Microsoft Edge
            var edm = uas.match(/edg\/(\d+(\.\d+)*)/);
            return ['Edge', 'Chromium', edm[1]];
        } else if (uas.match(/opr/)) {
            // Webkit版Opera
            var opm = uas.match(/opr\/(\d+(\.\d+)*)/);
            return ['Opera', 'Webkit', opm[1]];
        } else if (uas.match(/chrome/)) {
            // Google Chrome
            var chm = uas.match(/chrome\/(\d+(\.\d+)*)/);
            return ['Chrome', chm[1]];
        } else if (uas.match(/safari/)) {
            // Safari
            var sfm = uas.match(/safari\/(\d+(\.\d+)*)/);
            return ['Safari', sfm[1]];
        } else if (uas.match(/firefix/)) {
            // Mozilla Firefox
            var fxm = uas.match(/firefox\/(\d+(\.\d+)*)/);
            return ['Firefox', fxm[1]];
        } else if (uas.match(/opera/)) {
            // Presto版Opera
            var oopm = uas.match(/opera\/(\d+(\.\d+)*)/);
            return ['Opera', 'Presto', oopm[1]];
        } else {
            return ['Unknown'];
        }
    };
    /**
     * iframe要素をフィットさせます
     * @param {HTMLIFrameElement} iframe iframe要素
     */
    var fitIframe = function (iframe) {
        var height = 0;
        try {
            height = iframe.contentWindow.document.body.offsetHeight;
        } catch {
            return;
        }
        iframe.style.height = height + 'px';
    };
    var iframes = document.getElementsByTagName('iframe');
    /**
     * iframeをまとめてリサイズします
     */
    var resizeIframes = function () {
        for (var i = 0; i < iframes.length; i++) {
            fitIframe(iframes[i]);
        }
    };
    /**
     * ハンドラをiframeに紐付けます
     * @param {Function} f ハンドラ
     */
    var bindLoadHandlerToIframes = function (f) {
        for (var i = 0; i < iframes.length; i++) {
            if (iframes[i].addEventListener) {
                iframes[i].addEventListener('load', f);
            } else if (iframes[i].attachEvent) {
                iframes[i].attachEvent('onload', f);
            }
        }
    };
    var uaDetRes = detectUa();
    if (uaDetRes[0] === 'Safari' || (uaDetRes[0] === 'Opera' &&
        uaDetRes[1] === 'Presto')) {
        bindLoadHandlerToIframes(function () {
            setTimeout(resizeIframes, 0);
        });
        (function () {
            for (var i = 0; i < iframes.length; i++) {
                var src = iframes[i].src;
                iframes[i].src = '';
                iframes[i].src = src;
            }
        })();
    } else {
        bindLoadHandlerToIframes(function (ev) {
            var ifr = (ev.targtet ? this : ev.srcElement);
            fitIframe(ifr);
        });
    }
});
